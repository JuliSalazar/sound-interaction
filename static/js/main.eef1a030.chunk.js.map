{"version":3,"sources":["icons/star.svg","utils/getImageSrc.ts","components/SideNavBar/SideNavBar.tsx","utils/GeneralContext.ts","components/SoundItem/SoundItem.tsx","components/Sliders/CircleSlider.tsx","components/Sliders/Slider.tsx","components/Sliders/RangeSlider.tsx","components/Sliders/Checkbox.tsx","components/Visualization/Visualization.tsx","components/YourSoundItem/YourSoundItem.tsx","containers/App/App.tsx","index.tsx"],"names":["_g","_g2","_g3","_g4","_defs","baseUrl","process","getImageSrc","url","SideNavBar","notification","logoSrc","homeSrc","profileSrc","folderSrc","heartSrc","className","to","src","alt","GeneralContext","createContext","predeterminateSounds","onSoundItemClick","id","onSoundItemAdd","onSoundItemStop","SoundItem","name","useContext","onClick","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgStar","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","filter","d","fillOpacity","x","y","filterUnits","colorInterpolationFilters","floodOpacity","result","in","type","values","stdDeviation","mode","in2","operator","ForwardRef","CircleEffectItem","label","value","decimal","min","max","onValueChange","progressLineCap","hideLabelValue","labelColor","valueFontSize","verticalOffset","knobColor","progressColorFrom","progressColorTo","progressSize","trackColor","trackSize","onChange","Slider","variant","children","step","event","parseFloat","RangeSlider","Checkbox","checked","Visualization","selectedSound","variablesRef","React","useRef","mysound","refVisual","useEffect","current","p5","sketch","fft","w","setup","createCanvas","FFT","draw","background","color","spectrum","analyze","noStroke","map","rect","mousePressed","YourSoundItem","preSounds","soundUrl","vol","pan","rate","feedback","time","mix","reverbTime","decayRate","dryWet","distortion","sound","App","useState","preSoundsList","setSound","playSound","addSound","changeVolume","getHandleChange","saveSound","stopSound","usersSounds","setUsersSounds","noti","setNoti","window","onload","AudioContext","suspend","selected","delay","reverb","mySound","sounds","savedSounds","preload","getAudioContext","forEach","push","loadSound","Delay","Reverb","Distortion","userStartAudio","find","s","play","userSound","soundToAdd","stop","soundItem","setVolume","drywet","connect","disconnect","prev","handleSoundItemClick","handleSoundItemAdd","handleSoundItemStop","generalPropsTab","setGeneralPropsTab","effectTab","setEffectTab","basename","path","render","Provider","style","display","index","from","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eef1a030.chunk.js","sourcesContent":["var _g, _g2, _g3, _g4, _defs;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgStar(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 29,\n    height: 35,\n    viewBox: \"0 0 29 35\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    filter: \"url(#filter0_dd)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.5 10C14.5 10 14.7483 13.708 15.7154 15.2553C16.6825 16.8027 19 17.2 19 17.2C19 17.2 16.6825 17.5973 15.7154 19.1447C14.7483 20.692 14.5 24.4 14.5 24.4C14.5 24.4 14.2517 20.692 13.2846 19.1447C12.3175 17.5973 10 17.2 10 17.2C10 17.2 12.3175 16.8027 13.2846 15.2553C14.2517 13.708 14.5 10 14.5 10Z\",\n    fill: \"white\",\n    fillOpacity: 0.1\n  }))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    filter: \"url(#filter1_bd)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.5 10C14.5 10 14.7483 13.708 15.7154 15.2553C16.6825 16.8027 19 17.2 19 17.2C19 17.2 16.6825 17.5973 15.7154 19.1447C14.7483 20.692 14.5 24.4 14.5 24.4C14.5 24.4 14.2517 20.692 13.2846 19.1447C12.3175 17.5973 10 17.2 10 17.2C10 17.2 12.3175 16.8027 13.2846 15.2553C14.2517 13.708 14.5 10 14.5 10Z\",\n    fill: \"white\",\n    fillOpacity: 0.1\n  }))), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    filter: \"url(#filter2_dd)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.5 10C14.5 10 14.7483 13.708 15.7154 15.2553C16.6825 16.8027 19 17.2 19 17.2C19 17.2 16.6825 17.5973 15.7154 19.1447C14.7483 20.692 14.5 24.4 14.5 24.4C14.5 24.4 14.2517 20.692 13.2846 19.1447C12.3175 17.5973 10 17.2 10 17.2C10 17.2 12.3175 16.8027 13.2846 15.2553C14.2517 13.708 14.5 10 14.5 10Z\",\n    fill: \"white\"\n  }))), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    filter: \"url(#filter3_dd)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.5 10C14.5 10 14.7483 13.708 15.7154 15.2553C16.6825 16.8027 19 17.2 19 17.2C19 17.2 16.6825 17.5973 15.7154 19.1447C14.7483 20.692 14.5 24.4 14.5 24.4C14.5 24.4 14.2517 20.692 13.2846 19.1447C12.3175 17.5973 10 17.2 10 17.2C10 17.2 12.3175 16.8027 13.2846 15.2553C14.2517 13.708 14.5 10 14.5 10Z\",\n    fill: \"white\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter0_dd\",\n    x: 0,\n    y: 0,\n    width: 29,\n    height: 34.4,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", null), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 5\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.25 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"BackgroundImageFix\",\n    result: \"effect1_dropShadow\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", null), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 1\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.5 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"effect1_dropShadow\",\n    result: \"effect2_dropShadow\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"effect2_dropShadow\",\n    result: \"shape\"\n  })), /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter1_bd\",\n    x: 0,\n    y: 0,\n    width: 29,\n    height: 34.4,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    in: \"BackgroundImage\",\n    stdDeviation: 1\n  }), /*#__PURE__*/React.createElement(\"feComposite\", {\n    in2: \"SourceAlpha\",\n    operator: \"in\",\n    result: \"effect1_backgroundBlur\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", null), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 5\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 1 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"effect1_backgroundBlur\",\n    result: \"effect2_dropShadow\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"effect2_dropShadow\",\n    result: \"shape\"\n  })), /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter2_dd\",\n    x: 0,\n    y: 0,\n    width: 29,\n    height: 34.4,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", null), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 5\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.25 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"BackgroundImageFix\",\n    result: \"effect1_dropShadow\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", null), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 1\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.25 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"effect1_dropShadow\",\n    result: \"effect2_dropShadow\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"effect2_dropShadow\",\n    result: \"shape\"\n  })), /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter3_dd\",\n    x: 0,\n    y: 0,\n    width: 29,\n    height: 34.4,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", null), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 5\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.25 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"BackgroundImageFix\",\n    result: \"effect1_dropShadow\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", null), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 1\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.25 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"effect1_dropShadow\",\n    result: \"effect2_dropShadow\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"effect2_dropShadow\",\n    result: \"shape\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgStar);\nexport default __webpack_public_path__ + \"static/media/star.2d365d06.svg\";\nexport { ForwardRef as ReactComponent };","  \r\nconst baseUrl = `${process.env.PUBLIC_URL}/resources/`;\r\n\r\nexport const getImageSrc = (url: string) => {\r\n    return `${baseUrl}${url}`;\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getImageSrc } from '../../utils/getImageSrc';\r\ninterface SideNavBarProps {\r\n    notification: boolean;\r\n}\r\n\r\nexport const SideNavBar: React.FC<SideNavBarProps> = ({notification}) => {\r\n    const logoSrc = getImageSrc('/logo.png');\r\n    const homeSrc = getImageSrc('/home.png');\r\n    const profileSrc = getImageSrc('/profile.png');\r\n    const folderSrc = getImageSrc('/folder.png');\r\n    const heartSrc = getImageSrc('/heart.png');\r\n    return <nav className=\"sideBar\">\r\n        <Link to=\"/home\" className=\"sideBar__link sideBar__link--logo\">\r\n            <img src={logoSrc} alt=\"\" />\r\n        </Link>\r\n        <Link to=\"/home\" className=\"sideBar__link\">\r\n            <img src={homeSrc} alt=\"\" />\r\n            <span className=\"sideBar__name\">Home</span>\r\n        </Link>\r\n        <Link to=\"/profile\" className=\"sideBar__link\">\r\n            <img src={profileSrc} alt=\"\" />\r\n            <span className=\"sideBar__name\">Profile</span>\r\n        </Link>\r\n        <Link to=\"/sounds\" className={`sideBar__link${notification===true? ' sideBar__link--notification':''}`}>\r\n            <img src={folderSrc} alt=\"\" />\r\n            <span className=\"sideBar__name\">Your sounds</span>\r\n        </Link>\r\n        <Link to=\"/fav\" className=\"sideBar__link\">\r\n            <img src={heartSrc} alt=\"\" />\r\n            <span className=\"sideBar__name\">Favorites</span>\r\n        </Link>\r\n    </nav>;\r\n\r\n\r\n}","import {createContext} from 'react';\r\nexport type SoundItemType = {\r\n    id: number,\r\n    name: string,\r\n    soundUrl: string,\r\n    vol: number,\r\n    pan: number,\r\n    rate: number,\r\n    //Delay;\r\n    feedback: number,\r\n    time: number,\r\n    mix: number,\r\n    //Reverb\r\n    reverbTime: number,\r\n    decayRate: number,\r\n    dryWet:number,\r\n    //\r\n    distortion: boolean,\r\n    //SoundFile\r\n    sound: any,\r\n}\r\n\r\nexport const GeneralContext = createContext({\r\n    predeterminateSounds: [] as SoundItemType[],\r\n    onSoundItemClick: (id: number) => {},\r\n    onSoundItemAdd: (id: number) => {},\r\n    onSoundItemStop: (id: number) => {},\r\n});","import React, { useContext } from 'react';\r\nimport { GeneralContext } from '../../utils/GeneralContext';\r\nimport { getImageSrc } from '../../utils/getImageSrc';\r\n\r\ninterface SoundItemProps {\r\n\tid: number,\r\n\tname: string,\r\n\tsoundUrl: string,\r\n\t/* vol: number,\r\n\tpan: number,\r\n\tdeleted: false,\r\n\t//Delay\r\n\tfeedback: number,\r\n\ttime: number,\r\n\tmix: number\r\n\t//Distortion\r\n\tgain: number; */\r\n}\r\n\r\n\r\nexport const SoundItem: React.FC<SoundItemProps> = ({ name, id, /* app, vol, pan, feedback, time, mix, gain */ }) => {\r\n\r\n\tconst { onSoundItemClick } = useContext(GeneralContext);\r\n\tconst { onSoundItemAdd } = useContext(GeneralContext);\r\n\tconst { onSoundItemStop } = useContext(GeneralContext);\r\n\tconst handleClick = () => {\r\n\t\tonSoundItemClick(id);\r\n\t}\r\n\tconst handleStop = () => {\r\n\t\tonSoundItemStop(id);\r\n\t}\r\n\tconst handleAdd = () => {\r\n\t\tonSoundItemAdd(id);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"soundItem\">\r\n\t\t\t<h3 className=\"soundItem__name\">{name}</h3>\r\n\t\t\t<div className=\"soundItem__buttons\">\r\n\t\t\t\t<button className=\"soundItem__button\"  onClick={handleClick}>\r\n\t\t\t\t\t<img src={getImageSrc('/playIcon.png')} alt=\"\" />\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"soundItem__button\" onClick={handleStop}>\r\n\t\t\t\t\t<img src={getImageSrc('/stop.png')} alt=\"\" />\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"soundItem__button\" onClick={handleAdd}>\r\n\t\t\t\t\t<img src={getImageSrc('/addIcon.png')} alt=\"\"/>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport CircularSlider from '@fseehawer/react-circular-slider';\r\nimport { ReactComponent as EmojiIcon } from '../../icons/star.svg';\r\n\r\ninterface CircleEffectItemProps {\r\n    label: string;\r\n    value: number;\r\n    min: number;\r\n    max: number;\r\n    onValueChange: (value: number) => void;\r\n    decimal?: boolean;\r\n}\r\nexport const CircleEffectItem: React.FC<CircleEffectItemProps> = ({ label, value, min, max, decimal,onValueChange }) => {\r\n\r\n    const handleValueChange: React.ChangeEventHandler<HTMLInputElement> = (value:any) => {\r\n        if (decimal) { \r\n            onValueChange(value/50);\r\n        }\r\n    }\r\n    //<CircleSlider value={rateValue} stepSize=\"0.1\" circleWidth={10} progressWidth={10} knobRadius={5} gradientColorFrom={'#333DE6'} gradientColorTo={'#54C2F7'}onChange={handleChange}/>\r\n    return (\r\n\r\n        <div className=\"circleEffectItem\">\r\n            <h5>{label}</h5>\r\n            <CircularSlider\r\n                width={100}\r\n                progressLineCap=\"flat\"\r\n                min={0}\r\n                max={100}\r\n                hideLabelValue={true}\r\n                labelColor=\"#FFFFFF\"\r\n                valueFontSize=\"2rem\"\r\n                verticalOffset=\"1rem\"\r\n                knobColor=\"#000000\"\r\n                progressColorFrom=\"#333DE6\"\r\n                progressColorTo=\"#54C2F7\"\r\n                progressSize={10}\r\n                trackColor=\"#465383\"\r\n                trackSize={10}\r\n                onChange={handleValueChange}>\r\n                <EmojiIcon x=\"-3\" y=\"-3\" width=\"40px\" height=\"40px\" />\r\n            </CircularSlider>\r\n            <span>{value}</span>\r\n        </div >\r\n    );\r\n\r\n}","\r\nimport React from 'react';\r\n\r\nexport interface SliderProps {\r\n    label: string;\r\n    variant?: 'primary' | 'secondary' | 'background';\r\n    min: number;\r\n    max: number;\r\n    onValueChange: (value: number) => void;\r\n    value: number;\r\n}\r\n\r\nexport const Slider: React.FC<SliderProps> = ({variant, children, label, min, max, value, onValueChange} ) => {\r\n    const handleValueChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n        onValueChange(parseFloat(event.target.value));\r\n    }\r\n    return <div className={`slider ${variant? 'slider--'+variant : ''}`}>\r\n        <label>{label}</label>\r\n        <input type=\"range\" min={min} max={max} step={0.1} value={value} onChange={handleValueChange} />\r\n        {children}\r\n        <span>{value}</span>\r\n    </div>\r\n}","import React from 'react';\r\nimport { Slider, SliderProps } from './Slider';\r\n\r\ntype RangeSliderProps = SliderProps;\r\n\r\nexport const RangeSlider: React.FC<RangeSliderProps> = ({label, min, max, value,variant, onValueChange}) => {\r\n\r\n\r\n    return ( <Slider\r\n    variant={variant}\r\n    label={label}\r\n    max={max}\r\n    min={min}\r\n    onValueChange={onValueChange}\r\n    value={value}>\r\n    </Slider>\r\n    );\r\n}","import React from 'react';\r\n\r\n\r\ntype CheckboxProps = {\r\n  onChange: (value: boolean) => void;\r\n  value: boolean;\r\n  label: string;\r\n}\r\n\r\nexport const Checkbox: React.FC<CheckboxProps> = ({ onChange, value, label}) => {\r\n\r\n  const handleChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\r\n    onChange(event.target.checked);\r\n  }\r\n\r\n  return <div className=\"slider\">\r\n  <label>{label}</label>\r\n  <input\r\n    type=\"checkbox\"\r\n    checked={value}\r\n    onChange={handleChange} />\r\n  </div>;\r\n \r\n}","\r\nimport React from 'react';\r\nimport { SoundItemType } from '../../utils/GeneralContext';\r\n\r\nexport interface VisualizationProps {\r\n    selectedSound: SoundItemType;\r\n}\r\n\r\ndeclare var p5: any;\r\nexport const Visualization: React.FC<VisualizationProps> = ({selectedSound}) => {\r\n    const variablesRef = React.useRef({\r\n        mysound : selectedSound,\r\n    });\r\n    const refVisual = React.useRef(null as HTMLDivElement | null);\r\n    React.useEffect(() => {\r\n\t\tvariablesRef.current.mysound = selectedSound;\r\n\t}, [selectedSound])\r\n    React.useEffect(() => {\r\n        const app = new p5((sketch: any) => {\r\n            let fft: any;\r\n            let w: number;\r\n            sketch.setup = () => {\r\n                sketch.createCanvas(750,200);\r\n                fft = new p5.FFT(0.9,64);\r\n                w =  sketch.width/64;\r\n            }\r\n            sketch.draw = () => {\r\n                sketch.background(sketch.color('#09021A'));\r\n                let spectrum = fft.analyze();\r\n                /* if(variablesRef.current.mysound.sound!= 0){\r\n                    for (let t = 0.0; t < variablesRef.current.mysound.sound.duration(); t++) {\r\n                        sketch.stroke(255);\r\n                     sketch.line(variablesRef.current.mysound.sound.duration()/sketch.width,sketch.height, variablesRef.current.mysound.sound.duration()/sketch.width, 10 );\r\n                     }\r\n                 } */\r\n                sketch.noStroke();\r\n                sketch.fill(sketch.color('#5DC6FA'));\r\n                for (let i = 0; i< spectrum.length; i++){\r\n                  //let x = sketch.map(i, 0, spectrum.length, 0, sketch.windowWidth);\r\n                  let y = sketch.map(spectrum[i], 0, 200, sketch.height, 0);\r\n                  sketch.rect(i*w, y, w-2 , sketch.height - y);\r\n                }\r\n               // \r\n              \r\n            }\r\n            sketch.mousePressed = () => {\r\n    \r\n            }\r\n        }, refVisual.current!);\r\n    },[]);\r\n    return <div className=\"visualization\" ref={refVisual}></div>;\r\n\r\n}","import React, { useContext } from 'react';\r\nimport { GeneralContext } from '../../utils/GeneralContext';\r\nimport { getImageSrc } from '../../utils/getImageSrc';\r\n\r\ninterface YourSoundItemProps {\r\n\tid: number,\r\n\tname: string,\r\n\tsoundUrl: string,\r\n\t/* vol: number,\r\n\tpan: number,\r\n\tdeleted: false,\r\n\t//Delay\r\n\tfeedback: number,\r\n\ttime: number,\r\n\tmix: number\r\n\t//Distortion\r\n\tgain: number; */\r\n}\r\n\r\n\r\nexport const YourSoundItem: React.FC<YourSoundItemProps> = ({ name, id, /* app, vol, pan, feedback, time, mix, gain */ }) => {\r\n\r\n\tconst { onSoundItemClick } = useContext(GeneralContext);\r\n\tconst { onSoundItemStop } = useContext(GeneralContext);\r\n\tconst handleClick = () => {\r\n\t\tonSoundItemClick(id);\r\n\t}\r\n\tconst handleStop = () => {\r\n\t\tonSoundItemStop(id);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"yourSoundItem\">\r\n\t\t\t<h3 className=\"yourSoundItem__name\">{name}</h3>\r\n            <img src={getImageSrc('/mySound.svg')} alt=\"\"/>\r\n\t\t\t<div className=\"yourSoundItem__buttons\">\r\n\t\t\t\t<button className=\"yourSoundItem__button\"  onClick={handleClick}>\r\n\t\t\t\t\t<img src={getImageSrc('/playIcon.png')} alt=\"\" />\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"yourSoundItem__button\" onClick={handleStop}>\r\n\t\t\t\t\t<img src={getImageSrc('/stop.png')} alt=\"\" />\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t);\r\n}","import React from 'react';\r\nimport { SideNavBar } from '../../components/SideNavBar/SideNavBar';\r\nimport './App.css';\r\nimport { HashRouter, Redirect, Route } from 'react-router-dom';\r\nimport { GeneralContext, SoundItemType } from '../../utils/GeneralContext';\r\nimport { getImageSrc } from '../../utils/getImageSrc';\r\nimport { SoundItem } from '../../components/SoundItem/SoundItem';\r\nimport { CircleEffectItem } from '../../components/Sliders/CircleSlider';\r\nimport { RangeSlider } from '../../components/Sliders/RangeSlider';\r\nimport { Checkbox } from '../../components/Sliders/Checkbox';\r\nimport { Visualization } from '../../components/Visualization/Visualization';\r\nimport { YourSoundItem } from '../../components/YourSoundItem/YourSoundItem';\r\n\r\n\r\nconst preSounds: SoundItemType[] = [\r\n    {\r\n        id: 0,\r\n        name: 'Guitar',\r\n        soundUrl: getImageSrc('sounds/guitar.wav'),\r\n        vol: 1,\r\n        pan: 0,\r\n        rate: 0,\r\n        //Delay\r\n        feedback: 0.0,\r\n        time: 0.0,\r\n        mix: 0,\r\n        //Distortion\r\n        reverbTime: 0,\r\n        decayRate: 0,\r\n        dryWet: 0,\r\n        distortion: false,\r\n        //SoundFile\r\n        sound: 0,\r\n    },\r\n    {\r\n        id: 1,\r\n        name: 'Drum',\r\n        soundUrl: getImageSrc('sounds/drum.wav'),\r\n        vol: 1,\r\n        pan: 0,\r\n        rate: 0,\r\n        //Delay\r\n        feedback: 0.0,\r\n        time: 0,\r\n        mix: 0,\r\n        //Distortion\r\n        reverbTime: 0,\r\n        decayRate: 0,\r\n        dryWet: 0,\r\n        distortion: false,\r\n        //SoundFile\r\n        sound: 0,\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Wolf Howl',\r\n        soundUrl: getImageSrc('sounds/wolfHowl.wav'),\r\n        vol: 1,\r\n        pan: 0,\r\n        rate: 0,\r\n        //Delay\r\n        feedback: 0,\r\n        time: 0,\r\n        mix: 0,\r\n        //Distortion\r\n        reverbTime: 0,\r\n        decayRate: 0,\r\n        dryWet: 0,\r\n        distortion: false,\r\n        //SoundFile\r\n        sound: 0,\r\n    },\r\n\r\n];\r\ndeclare var p5: any;\r\nexport const App = () => {\r\n    const [preSoundsList, setPreSoundsList] = React.useState(preSounds);\r\n    const [sound, setSound] = React.useState<SoundItemType>(preSoundsList[0]);\r\n    const ref = React.useRef(null as HTMLDivElement | null);\r\n    const variablesRef = React.useRef({\r\n        playSound: (id: number) => { },\r\n        addSound: (id: number) => { },\r\n        changeVolume: (id: number, sound: SoundItemType) => { },\r\n        getHandleChange: (key: keyof SoundItemType, id: number, sound: SoundItemType) => { },\r\n        saveSound: (id: number) => { },\r\n        stopSound: (id: number) => { },\r\n    });\r\n\r\n\r\n    const [usersSounds, setUsersSounds] = React.useState<SoundItemType[]>([]);\r\n    const [noti, setNoti] = React.useState<boolean>(false);\r\n   \r\n    React.useEffect(() => {\r\n        window.onload = function() {\r\n            var context = new AudioContext();\r\n            context.suspend();\r\n          }\r\n\r\n        const app = new p5((sketch: any) => {\r\n\r\n            let selected: SoundItemType | null | undefined;\r\n            var sounds: SoundItemType[] = [];\r\n            var savedSounds: SoundItemType[] = [];\r\n            \r\n\r\n            sketch.preload = () => {\r\n                sketch.getAudioContext().suspend();\r\n                preSounds.forEach(({ name, soundUrl, id, vol, pan, rate, time, mix, reverbTime, decayRate, dryWet, distortion, feedback }) => {\r\n                    sounds.push({\r\n                        id,\r\n                        name,\r\n                        soundUrl,\r\n                        vol,\r\n                        pan,\r\n                        rate,\r\n                        //Delay\r\n                        feedback,\r\n                        time,\r\n                        mix,\r\n                        //Reverb\r\n                        reverbTime,\r\n                        decayRate,\r\n                        dryWet,\r\n                        distortion,\r\n\r\n                        //SoundFile\r\n                        sound: sketch.loadSound(soundUrl),\r\n                    });\r\n                });\r\n            }\r\n            let delay: any;\r\n            let reverb: any;\r\n            let distortion: any;\r\n            sketch.setup = () => {\r\n                delay = new p5.Delay();\r\n                reverb = new p5.Reverb();\r\n                distortion = new p5.Distortion();\r\n            }\r\n\r\n            variablesRef.current.playSound = (id: number) => {\r\n                sketch.userStartAudio();\r\n                const sound = sounds.find((s) => s.id === id);\r\n                sound?.sound.play();\r\n                const userSound = savedSounds.find((s) => s.id === id);\r\n                userSound?.sound.play();\r\n            }\r\n            variablesRef.current.addSound = (id: number) => {\r\n                const soundToAdd = sounds.find((s) => s.id === id);\r\n                selected = soundToAdd;\r\n            }\r\n            variablesRef.current.stopSound = (id: number) => {\r\n                const sound = sounds.find((s) => s.id === id);\r\n                sound?.sound.stop();\r\n                const userSound = savedSounds.find((s) => s.id === id);\r\n                userSound?.sound.stop();\r\n            }\r\n\r\n            let mySound: any;\r\n            variablesRef.current.getHandleChange = (key: keyof SoundItemType, id: number, soundItem: SoundItemType) => {\r\n                if (selected) {\r\n                    mySound = selected.sound;\r\n                    switch (key) {\r\n                        case 'vol':\r\n                            mySound.setVolume(soundItem.vol);\r\n                            break;\r\n                        case 'pan':\r\n                            mySound.pan(soundItem.pan);\r\n                            break;\r\n                        case 'rate':\r\n                            mySound.rate(soundItem.rate);\r\n                            break;\r\n                        case 'feedback':\r\n                        case 'time':\r\n                        case 'mix':\r\n                            delay.process(mySound, soundItem.time, soundItem.feedback, soundItem.mix);\r\n                            break;\r\n                        case 'reverbTime':\r\n                        case 'decayRate':\r\n                        case 'dryWet':\r\n                            reverb.process(mySound, soundItem.reverbTime, soundItem.decayRate);\r\n                            reverb.drywet(soundItem.dryWet);\r\n                            break;\r\n                        case 'distortion':\r\n                            if (soundItem.distortion) {\r\n                                mySound.setVolume(0.1);\r\n                                distortion.connect();\r\n                                distortion.process(mySound, 0.1);\r\n                            } else {\r\n                                mySound.setVolume(soundItem.vol);\r\n                                distortion.disconnect();\r\n                            }\r\n                            break;\r\n\r\n                    }\r\n                    setSound((prev) => ({\r\n                        ...prev,\r\n                        sound: mySound\r\n                    }));\r\n                    variablesRef.current.saveSound = (id: number) => {\r\n                        if (mySound && selected) {\r\n                            savedSounds.push({\r\n                                ...selected,\r\n                                id: 100 + savedSounds.length,\r\n                                name: \"Your Sound\",\r\n                                sound: mySound\r\n                            });\r\n                            setUsersSounds(savedSounds);\r\n                            setNoti(true);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }, ref.current!);\r\n    }, []);\r\n\r\n\r\n    const handleSoundItemClick = (id: number) => {\r\n        variablesRef.current.playSound(id);\r\n    }\r\n    const handleSoundItemAdd = (id: number) => {\r\n        variablesRef.current.addSound(id);\r\n        let mySound = preSoundsList.find((s) => s.id === id)\r\n        if (mySound) setSound(mySound);\r\n    }\r\n   \r\n    const handleSaveSound = (id: number) => {\r\n        variablesRef.current.saveSound(id);\r\n        /* var btn = document.querySelector('.saveButton');\r\n        if (btn) btn.innerHTML = 'Saved!'; */\r\n    }\r\n\r\n    const handleSoundItemStop = (id: number) => {\r\n        variablesRef.current.stopSound(id);\r\n    }\r\n    const getHandleChange = (key: keyof SoundItemType, id: number) => {\r\n        return (value: any) => {\r\n            setSound((prev) => ({\r\n                ...prev,\r\n                [key]: value\r\n            }));\r\n            variablesRef.current.getHandleChange(key, id, ({\r\n                ...sound,\r\n                [key]: value\r\n            }));\r\n        }\r\n    }\r\n\r\n    const [generalPropsTab, setGeneralPropsTab] = React.useState<'volume' | 'pan'>('volume');\r\n    const [effectTab, setEffectTab] = React.useState<'delay' | 'reverb' | 'distortion'>('delay');\r\n    return (\r\n\r\n        <main className=\"app\">\r\n            <HashRouter basename={process.env.PUBLIC_URL}>\r\n                <Route path=\"/\" render={() => {\r\n                    return <SideNavBar notification={noti} />\r\n                }} />\r\n\r\n                <GeneralContext.Provider value={{ predeterminateSounds: preSoundsList, onSoundItemClick: handleSoundItemClick, onSoundItemStop: handleSoundItemStop, onSoundItemAdd: handleSoundItemAdd }}>\r\n                    <Route path=\"/home\" render={() => {\r\n                        return <section className=\"app__content\">\r\n                            <h1 className=\"app__title\">INTERACTION</h1>\r\n                            <button className={`saveButton${noti===true? ' saveButton--saved':''}`} onClick={() => handleSaveSound(sound.id)}>Save your sound!</button>\r\n                            <div style={{ display: 'none' }} ref={ref}></div>\r\n\r\n                            <section className=\"app__soundContainer\">\r\n                                <div className=\"app__preSounds\">\r\n                                    <p className=\"app__p\"> Add a sound to start with \"+\" button</p>\r\n                                    {preSoundsList.map(({ name, soundUrl, id }, index) => {\r\n                                        return <SoundItem\r\n                                            key={index}\r\n                                            name={name}\r\n                                            soundUrl={soundUrl}\r\n                                            id={id}\r\n                                        />;\r\n                                    })}\r\n                                </div>\r\n                                <Visualization selectedSound={sound}/>\r\n                            </section>\r\n                            <button className={`btn ${generalPropsTab === 'volume' ? 'btn--selected' : ''}`} onClick={() => setGeneralPropsTab(\"volume\")}>Volume</button>\r\n                            <button className={`btn ${generalPropsTab === 'pan' ? 'btn--selected' : ''}`} onClick={() => setGeneralPropsTab(\"pan\")}>Pan</button>\r\n                            {generalPropsTab === 'volume' &&\r\n                                <RangeSlider variant={'background'} label={''}\r\n                                    max={1}\r\n                                    min={0}\r\n                                    onValueChange={getHandleChange('vol', sound.id)}\r\n                                    value={sound.vol}></RangeSlider>\r\n                            }\r\n                            {generalPropsTab === 'pan' &&\r\n                                <RangeSlider variant={'background'} label={''}\r\n                                    max={1}\r\n                                    min={-1}\r\n                                    onValueChange={getHandleChange('pan', sound.id)}\r\n                                    value={sound.pan}></RangeSlider>\r\n                            }\r\n\r\n                            <section className=\"app__contentPanels\">\r\n                                <section className=\"soundPropsContainer\">\r\n                                    <h3 className=\"h3--contentPanels\">Sound Properties</h3>\r\n                                    <article className=\"soundPropsContainer__fade\"></article>\r\n                                    <article className=\"soundPropsContainer__props\">\r\n                                        {/* <CircleEffectItem name=\"Pitch Adjust\" value={sound.gain} decimal={true} /> */}\r\n                                        <CircleEffectItem label=\"Playback Rate\" value={sound.rate} decimal={true} min={0} max={2} onValueChange={getHandleChange('rate', sound.id)} />\r\n                                        {/* <RangeSlider label={'Playback Rate'}\r\n                                            max={2}\r\n                                            min={0}\r\n                                            onValueChange={getHandleChange('rate', sound.id)}\r\n                                            value={sound.rate}></RangeSlider> */}\r\n                                    </article>\r\n                                </section>\r\n                                <section className=\"soundEffectsContainer\">\r\n                                    <h3 className=\"h3--contentPanels\">Effects</h3>\r\n                                    <article className=\"soundEffectsContainer__effectsButtons\">\r\n                                        <button className={`btn ${effectTab === 'delay' ? 'btn--selected' : ''}`} onClick={() => setEffectTab(\"delay\")}>Delay</button>\r\n                                        <button className={`btn ${effectTab === 'reverb' ? 'btn--selected' : ''}`} onClick={() => setEffectTab(\"reverb\")}>Reverb</button>\r\n                                        <button className={`btn ${effectTab === 'distortion' ? 'btn--selected' : ''}`} onClick={() => setEffectTab(\"distortion\")}>Distortion</button>\r\n                                    </article>\r\n\r\n                                    {effectTab === 'delay' && <article className=\"soundEffectsContainer__effectsProps\">\r\n                                        <RangeSlider label={'Delay Time'}\r\n                                            max={1}\r\n                                            min={0}\r\n                                            onValueChange={getHandleChange('time', sound.id)}\r\n\r\n                                            value={sound.time}></RangeSlider>\r\n                                        <RangeSlider label={'Feedback'}\r\n                                            max={0.9}\r\n                                            min={0}\r\n                                            onValueChange={getHandleChange('feedback', sound.id)}\r\n\r\n                                            value={sound.feedback}></RangeSlider>\r\n                                        <RangeSlider label={'Filter Frequency'}\r\n                                            max={5000}\r\n                                            min={100}\r\n                                            onValueChange={getHandleChange('mix', sound.id)}\r\n\r\n                                            value={sound.mix}></RangeSlider>\r\n                                    </article>\r\n                                    }\r\n\r\n                                    {effectTab === 'reverb' && <article className=\"soundEffectsContainer__effectsProps\">\r\n                                        <RangeSlider label={'Reverb Time'}\r\n                                            max={5}\r\n                                            min={1}\r\n                                            onValueChange={getHandleChange('reverbTime', sound.id)}\r\n\r\n                                            value={sound.reverbTime}></RangeSlider>\r\n                                        <RangeSlider label={'Decay Rate'}\r\n                                            max={5}\r\n                                            min={1}\r\n                                            onValueChange={getHandleChange('decayRate', sound.id)}\r\n\r\n                                            value={sound.decayRate}></RangeSlider>\r\n                                        <RangeSlider label={'Dry/Wet'}\r\n                                            max={1}\r\n                                            min={0}\r\n                                            onValueChange={getHandleChange('dryWet', sound.id)}\r\n\r\n                                            value={sound.dryWet}></RangeSlider>\r\n                                    </article>\r\n                                    }\r\n                                    {effectTab === 'distortion' && <article className=\"soundEffectsContainer__effectsProps\">\r\n                                        <Checkbox\r\n                                            label=\"Distortion?\"\r\n                                            value={sound.distortion}\r\n                                            onChange={getHandleChange('distortion', sound.id)}\r\n                                        />\r\n\r\n                                    </article>\r\n                                    }\r\n                                </section>\r\n                            </section>\r\n                        </section>\r\n                    }} />\r\n                </GeneralContext.Provider>\r\n                <Route path=\"/profile\" render={() => {\r\n                    return <section className=\"app__content\">\r\n                        <h1 className=\"app__title\">PROFILE</h1>\r\n                    </section>\r\n                }} />\r\n                <GeneralContext.Provider value={{ predeterminateSounds: preSoundsList, onSoundItemClick: handleSoundItemClick, onSoundItemStop: handleSoundItemStop, onSoundItemAdd: handleSoundItemAdd }}>\r\n\r\n                    <Route path=\"/sounds\" render={() => {\r\n                        return <section className=\"app__content\">\r\n                            <h1 className=\"app__title\">YOUR SOUNDS</h1>\r\n                            <div style={{ display: 'none' }} ref={ref}></div>\r\n                            <section className=\"app__soundsContainer\">\r\n                                {usersSounds.map(({ name, soundUrl, id }, index) => {\r\n                                    return <YourSoundItem\r\n                                        key={index}\r\n                                        name={name}\r\n                                        soundUrl={soundUrl}\r\n                                        id={id}\r\n                                    />;\r\n                                })}\r\n                                {setNoti(false)}\r\n                             \r\n                            </section>\r\n                            <Visualization selectedSound={sound}></Visualization>\r\n                        </section>\r\n                    }} />\r\n                </GeneralContext.Provider>\r\n                <Route path=\"/fav\" render={() => {\r\n                    return <section className=\"app__content\">\r\n                        <h1 className=\"app__title\">FAVORITES</h1>\r\n                    </section>\r\n                }} />\r\n\r\n                <Redirect from=\"/\" to=\"/home\" exact />\r\n            </HashRouter>\r\n        </main>\r\n    );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './containers/App/App';\r\n\r\n//import './containers/App/App.scss';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n    \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}